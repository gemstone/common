name: "CodeQL"

on:
  push:
    branches: [master]
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 18 * * 6'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

    strategy:
      fail-fast: false
      matrix:
        language: ['csharp']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup .NET (9.x)
        id: setup-dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # Ensure the job uses the exact SDK we just installed
      - name: Pin SDK via global.json
        run: echo '{"sdk":{"version":"${{ steps.setup-dotnet.outputs.dotnet-version }}"}}' > global.json

      - name: Print SDKs for debugging
        run: dotnet --list-sdks && dotnet --info

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # optional: uncomment for extra checks
          # queries: security-and-quality

      # If your repo uses optional workloads (e.g., wasm-tools for Blazor WASM),
      # this will install whatever the solution asks for; otherwise this is a no-op.
      - name: Restore workloads (if any)
        run: dotnet workload restore

      - name: Restore NuGet
        run: dotnet restore src

      - name: Build
        run: dotnet build -c Release src --no-restore

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
