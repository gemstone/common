<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>BlockAllocatedMemoryStream Class</title><meta name="Title" content="BlockAllocatedMemoryStream" /><meta name="Help.Id" content="T:Gemstone.IO.BlockAllocatedMemoryStream" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Gemstone.IO" /><meta name="guid" content="T_Gemstone_IO_BlockAllocatedMemoryStream" /><meta name="Description" content="Defines a stream whose backing store is memory. Externally this class operates similar to a , internally it uses dynamically allocated buffer blocks instead of one large contiguous array of data." /><meta name="tocFile" content="../toc/IDX.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://gemstone.github.io/common/"><img alt="GPA Gemstone Library" src="../icons/gemstone-square-48.png" /></a></div><div id="DocumentationTitle" class="level-item">Gemstone Common Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="js">JavaScript</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Block<wbr />Allocated<wbr />Memory<wbr />Stream Class</h1><div class="summary">
            Defines a stream whose backing store is memory. Externally this class operates similar to a <span class="noLink">MemoryStream</span>,
            internally it uses dynamically allocated buffer blocks instead of one large contiguous array of data.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Gemstone_IO.htm">Gemstone.IO</a><br /><strong>Assembly:</strong> Gemstone.Common (in Gemstone.Common.dll) Version: 1.0.150 -- Release Build+64e3b411e1abfbd2d4d8a81e850c3909a0ce8731<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/BlockAllocatedMemoryStream.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">BlockAllocatedMemoryStream</span> : <span class="noLink">Stream</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/BlockAllocatedMemoryStream.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">BlockAllocatedMemoryStream</span>
	<span class="keyword">Inherits</span> <span class="noLink">Stream</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/BlockAllocatedMemoryStream.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">BlockAllocatedMemoryStream</span> : <span class="keyword">public</span> <span class="noLink">Stream</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="js"><div class="codeHeader"><span class="codeHeaderTitle">JavaScript</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/BlockAllocatedMemoryStream.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-js"><span class="identifier">Gemstone.IO.BlockAllocatedMemoryStream</span> = <span class="keyword">function</span>();

<span class="identifier">Type</span>.createClass(
	'Gemstone.IO.BlockAllocatedMemoryStream',
	<span class="noLink">Stream</span>);</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">MarshalByRefObject</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Stream</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">BlockAllocatedMemoryStream</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p>
            The <span class="selflink">BlockAllocatedMemoryStream</span> has two primary benefits over a normal <span class="noLink">MemoryStream</span>, first, the
            allocation of a large contiguous array of data in <span class="noLink">MemoryStream</span> can fail when the requested amount of contiguous
            memory is unavailable - the <span class="selflink">BlockAllocatedMemoryStream</span> prevents this; second, a <span class="noLink">MemoryStream</span> will
            constantly reallocate the buffer size as the stream grows and shrinks and then copy all the data from the old buffer to the
            new - the <span class="selflink">BlockAllocatedMemoryStream</span> maintains its blocks over its life cycle, unless manually cleared, thus
            eliminating unnecessary allocations and garbage collections when growing and reusing a stream.
            </p><p>
            Important: Unlike <span class="noLink">MemoryStream</span>, the <span class="selflink">BlockAllocatedMemoryStream</span> will not use a user provided buffer
            as its backing buffer. Any user provided buffers used to instantiate the class will be copied into internally managed reusable
            memory buffers. Subsequently, the <span class="selflink">BlockAllocatedMemoryStream</span> does not support the notion of a non-expandable
            stream. If you are using a <span class="noLink">MemoryStream</span> with your own buffer, the <span class="selflink">BlockAllocatedMemoryStream</span> will
            not provide any immediate benefit.
            </p><p>
            Note that the <span class="selflink">BlockAllocatedMemoryStream</span> will maintain all allocated blocks for stream use until the
            <a href="M_Gemstone_IO_BlockAllocatedMemoryStream_Clear.htm">Clear<span id="LST1884F2C9_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> method is called or the class is disposed.
            </p><p>
            No members in the <span class="selflink">BlockAllocatedMemoryStream</span> are guaranteed to be thread safe. Make sure any calls are
            synchronized when simultaneously accessed from different threads.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDA0SB0FASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream__ctor.htm">BlockAllocatedMemoryStream<span id="LST1884F2C9_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Initializes a new instance of <span class="selflink">BlockAllocatedMemoryStream</span>.
            </td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream__ctor_1.htm">BlockAllocatedMemoryStream(<span id="LST1884F2C9_2" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Initializes a new instance of <span class="selflink">BlockAllocatedMemoryStream</span> from specified <span class="parameter">buffer</span>.
            </td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream__ctor_3.htm">BlockAllocatedMemoryStream(Int32)</a></td><td>
            Initializes a new instance of <span class="selflink">BlockAllocatedMemoryStream</span> for specified <span class="parameter">capacity</span>.
            </td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream__ctor_2.htm">BlockAllocatedMemoryStream(<span id="LST1884F2C9_4" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Initializes a new instance of <span class="selflink">BlockAllocatedMemoryStream</span> from specified region of <span class="parameter">buffer</span>.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="ID0YC0FASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_Gemstone_IO_BlockAllocatedMemoryStream_CanRead.htm">CanRead</a></td><td>
            Gets a value that indicates whether the <span class="selflink">BlockAllocatedMemoryStream</span> object supports reading.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_6" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanRead</span>)</td></tr><tr><td><a href="P_Gemstone_IO_BlockAllocatedMemoryStream_CanSeek.htm">CanSeek</a></td><td>
            Gets a value that indicates whether the <span class="selflink">BlockAllocatedMemoryStream</span> object supports seeking.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_7" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanSeek</span>)</td></tr><tr><td><span class="noLink">CanTimeout</span></td><td>Gets a value that determines whether the current stream can time out.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="P_Gemstone_IO_BlockAllocatedMemoryStream_CanWrite.htm">CanWrite</a></td><td>
            Gets a value that indicates whether the <span class="selflink">BlockAllocatedMemoryStream</span> object supports writing.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_8" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CanWrite</span>)</td></tr><tr><td><a href="P_Gemstone_IO_BlockAllocatedMemoryStream_Length.htm">Length</a></td><td>
            Gets current stream length for this <span class="selflink">BlockAllocatedMemoryStream</span> instance.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Length</span>)</td></tr><tr><td><a href="P_Gemstone_IO_BlockAllocatedMemoryStream_Position.htm">Position</a></td><td>
            Gets current stream position for this <span class="selflink">BlockAllocatedMemoryStream</span> instance.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_10" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Position</span>)</td></tr><tr><td><span class="noLink">ReadTimeout</span></td><td>Gets or sets a value, in milliseconds, that determines how long the stream will attempt to read before timing out.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">WriteTimeout</span></td><td>Gets or sets a value, in milliseconds, that determines how long the stream will attempt to write before timing out.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="ID0TB0FASection"><table id="MethodList" class="table is-hoverable"><tr><td><span class="noLink">BeginRead</span></td><td>Begins an asynchronous read operation. (Consider using <span class="noLink">ReadAsync(<span id="LST1884F2C9_11" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_12" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span> instead.)<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">BeginWrite</span></td><td>Begins an asynchronous write operation. (Consider using <span class="noLink">WriteAsync(<span id="LST1884F2C9_13" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_14" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span> instead.)<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_Clear.htm">Clear</a></td><td>
            Clears the entire <span class="selflink">BlockAllocatedMemoryStream</span> contents and releases any allocated memory blocks.
            </td></tr><tr><td><span class="noLink">Close</span></td><td>Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream. Instead of calling this method, ensure that the stream is properly disposed.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyTo(Stream)</span></td><td>Reads the bytes from the current stream and writes them to another stream. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyTo(Stream, Int32)</span></td><td>Reads the bytes from the current stream and writes them to another stream, using a specified buffer size. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyToAsync(Stream)</span></td><td>Asynchronously reads the bytes from the current stream and writes them to another stream. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyToAsync(Stream, Int32)</span></td><td>Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyToAsync(Stream, CancellationToken)</span></td><td>Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified cancellation token. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyToAsync(Stream, Int32, CancellationToken)</span></td><td>Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CreateWaitHandle</span></td><td>Allocates a <span class="noLink">WaitHandle</span> object.<br />(Inherited from <span class="noLink">Stream</span>)<br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><span class="noLink">Dispose<span id="LST1884F2C9_15" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span></td><td>Releases all resources used by the <span class="noLink">Stream</span>.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_Dispose.htm">Dispose(Boolean)</a></td><td>
            Releases the unmanaged resources used by the <span class="selflink">BlockAllocatedMemoryStream</span> object and optionally releases the managed resources.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_16" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Dispose(Boolean)</span>)</td></tr><tr><td><span class="noLink">DisposeAsync</span></td><td>Asynchronously releases the unmanaged resources used by the <span class="noLink">Stream</span>.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">EndRead</span></td><td>Waits for the pending asynchronous read to complete. (Consider using <span class="noLink">ReadAsync(<span id="LST1884F2C9_17" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_18" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span> instead.)<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">EndWrite</span></td><td>Ends an asynchronous write operation. (Consider using <span class="noLink">WriteAsync(<span id="LST1884F2C9_19" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_20" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span> instead.)<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">Finalize</span></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_Flush.htm">Flush</a></td><td>
            Overrides the <span class="noLink">Flush<span id="LST1884F2C9_21" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span> method so that no action is performed.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_22" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Flush<span id="LST1884F2C9_23" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td></tr><tr><td><span class="noLink">FlushAsync<span id="LST1884F2C9_24" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span></td><td>Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">FlushAsync(CancellationToken)</span></td><td>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">GetLifetimeService</span></td><td>Retrieves the current lifetime service object that controls the lifetime policy for this instance.<br />(Inherited from <span class="noLink">MarshalByRefObject</span>)<br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">InitializeLifetimeService</span></td><td>Obtains a lifetime service object to control the lifetime policy for this instance.<br />(Inherited from <span class="noLink">MarshalByRefObject</span>)<br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><span class="noLink">MemberwiseClone<span id="LST1884F2C9_25" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">MemberwiseClone(Boolean)</span></td><td>Creates a shallow copy of the current <span class="noLink">MarshalByRefObject</span> object.<br />(Inherited from <span class="noLink">MarshalByRefObject</span>)</td></tr><tr><td><span class="noLink">ObjectInvariant</span></td><td>Provides support for a <span class="noLink">Contract</span>.<br />(Inherited from <span class="noLink">Stream</span>)<br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><span class="noLink">Read(Span<span id="LST1884F2C9_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST1884F2C9_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_Read.htm">Read(<span id="LST1884F2C9_28" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_29" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Reads a block of bytes from the current stream and writes the data to <span class="parameter">buffer</span>.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_30" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Read(<span id="LST1884F2C9_31" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_32" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span>)</td></tr><tr><td><span class="noLink">ReadAsync(Memory<span id="LST1884F2C9_33" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST1884F2C9_34" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</span></td><td>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadAsync(<span id="LST1884F2C9_35" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_36" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span></td><td>Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadAsync(<span id="LST1884F2C9_37" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_38" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, CancellationToken)</span></td><td>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadAtLeast</span></td><td>Reads at least a minimum number of bytes from the current stream and advances the position within the stream by the number of bytes read.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadAtLeastAsync</span></td><td>Asynchronously reads at least a minimum number of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_ReadByte.htm">ReadByte</a></td><td>
            Reads a byte from the current stream.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_39" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ReadByte<span id="LST1884F2C9_40" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td></tr><tr><td><span class="noLink">ReadExactly(Span<span id="LST1884F2C9_41" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST1884F2C9_42" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>Reads bytes from the current stream and advances the position within the stream until the <span class="parameter">buffer</span> is filled.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadExactly(<span id="LST1884F2C9_43" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_44" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span></td><td>Reads <span class="parameter">count</span> number of bytes from the current stream and advances the position within the stream.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadExactlyAsync(Memory<span id="LST1884F2C9_45" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST1884F2C9_46" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</span></td><td>Asynchronously reads bytes from the current stream, advances the position within the stream until the <span class="parameter">buffer</span> is filled, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadExactlyAsync(<span id="LST1884F2C9_47" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_48" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, CancellationToken)</span></td><td>Asynchronously reads <span class="parameter">count</span> number of bytes from the current stream, advances the position within the stream, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_ReadFrom.htm">ReadFrom</a></td><td>
            Reads specified number of bytes from source stream into this <span class="selflink">BlockAllocatedMemoryStream</span>
            starting at the current position.
            </td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_Seek.htm">Seek</a></td><td>
            Sets the <a href="P_Gemstone_IO_BlockAllocatedMemoryStream_Position.htm">Position</a> within the current stream to the specified value relative the <span class="parameter">origin</span>.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_49" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Seek(Int64, SeekOrigin)</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_SetLength.htm">SetLength</a></td><td>
            Sets the length of the current stream to the specified value.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_50" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SetLength(Int64)</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_ToArray.htm">ToArray</a></td><td>
            Writes the stream contents to a byte array, regardless of the <a href="P_Gemstone_IO_BlockAllocatedMemoryStream_Position.htm">Position</a> property.
            </td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">Write(ReadOnlySpan<span id="LST1884F2C9_51" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST1884F2C9_52" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_Write.htm">Write(<span id="LST1884F2C9_53" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_54" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Writes a block of bytes to the current stream using data read from <span class="parameter">buffer</span>.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_55" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Write(<span id="LST1884F2C9_56" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_57" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span>)</td></tr><tr><td><span class="noLink">WriteAsync(ReadOnlyMemory<span id="LST1884F2C9_58" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LST1884F2C9_59" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</span></td><td>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">WriteAsync(<span id="LST1884F2C9_60" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_61" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span></td><td>Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">WriteAsync(<span id="LST1884F2C9_62" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_63" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, CancellationToken)</span></td><td>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_WriteByte.htm">WriteByte</a></td><td>
            Writes a byte to the current stream at the current position.
            <br />(Overrides <span class="noLink">Stream<span id="LST1884F2C9_64" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>WriteByte(Byte)</span>)</td></tr><tr><td><a href="M_Gemstone_IO_BlockAllocatedMemoryStream_WriteTo.htm">WriteTo</a></td><td>
            Writes the entire stream into destination, regardless of <a href="P_Gemstone_IO_BlockAllocatedMemoryStream_Position.htm">Position</a>, which remains unchanged.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDAFASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_CopyTo.htm">CopyTo</a></td><td>
            Writes the contents of a stream to the provided stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_EnumExtensions_EnumExtensions_GetEnumValueOrDefault.htm">GetEnumValueOrDefault</a></td><td>
            Gets the enumeration constant for value, if defined in the enumeration, or a default value.
            <br />(Defined by <a href="T_Gemstone_EnumExtensions_EnumExtensions.htm">EnumExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_EnumExtensions_EnumExtensions_GetEnumValueOrDefault__1.htm">GetEnumValueOrDefault<span id="LST1884F2C9_65" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST1884F2C9_66" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Gets the enumeration constant for this value, if defined in the enumeration, or a default value.
            <br />(Defined by <a href="T_Gemstone_EnumExtensions_EnumExtensions.htm">EnumExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Read7BitUInt32.htm">Read7BitUInt32</a></td><td>
            Reads the 7-bit encoded value from the stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadAll.htm">ReadAll</a></td><td>
            Reads all of the provided bytes. Will not return prematurely, 
            but continue to execute a <span class="noLink">Read(<span id="LST1884F2C9_67" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST1884F2C9_68" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span> command until the entire
            <span class="parameter">length</span> has been read.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadBoolean.htm">ReadBoolean</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadBytes.htm">ReadBytes</a></td><td>
            Reads a byte array from a <span class="noLink">Stream</span>. 
            The number of bytes should be prefixed in the stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadBytes_1.htm">ReadBytes</a></td><td>
            Reads a byte array from a <span class="noLink">Stream</span>. 
            The number of bytes should be prefixed in the stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadChar.htm">ReadChar</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadDateTime.htm">ReadDateTime</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadDecimal.htm">ReadDecimal</a></td><td>
            Reads a decimal from the stream in Little Endian bytes.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadDouble.htm">ReadDouble</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadGuid.htm">ReadGuid</a></td><td>
            Reads a Guid from the stream in Little Endian bytes.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadInt16.htm">ReadInt16</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadInt32.htm">ReadInt32</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadInt32Collection.htm">ReadInt32Collection</a></td><td>
            Writes the supplied string to a <span class="noLink">Stream</span> in UTF8 encoding.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadInt64.htm">ReadInt64</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadNextByte.htm">ReadNextByte</a></td><td>
            Read a byte from the stream. 
            Will throw an exception if the end of the stream has been reached.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadNullableString.htm">ReadNullableString</a></td><td>
            Reads a string from a <span class="noLink">Stream</span> that was encoded in UTF8. 
            Value can be null and is prefixed with a boolean.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadObject.htm">ReadObject</a></td><td>
            Reads an object from a stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadSByte.htm">ReadSByte</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadSingle.htm">ReadSingle</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadStream.htm">ReadStream</a></td><td>
            Reads entire <span class="noLink">Stream</span> contents, and returns <span class="noLink">Byte</span> array of data.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadString.htm">ReadString</a></td><td>
            Reads a string from a <span class="noLink">Stream</span> that was encoded in UTF8.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadStringCollection.htm">ReadStringCollection</a></td><td>
            Writes the supplied string to a <span class="noLink">Stream</span> in UTF8 encoding.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadUInt16.htm">ReadUInt16</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadUInt32.htm">ReadUInt32</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadUInt64.htm">ReadUInt64</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_1.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to
             in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_2.htm">Write</a></td><td>
            Writes the entire buffer to the <span class="parameter">stream</span><br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_3.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_4.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_5.htm">Write</a></td><td>
            Writes the supplied string to a <span class="noLink">Stream</span> in UTF8 encoding.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_6.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_7.htm">Write</a></td><td>
            Writes a guid in little endian bytes to the stream
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_8.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_9.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_10.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_11.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_12.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_13.htm">Write</a></td><td>
            Writes the supplied string to a <span class="noLink">Stream</span> in UTF8 encoding.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_14.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_15.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_16.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_WriteCollection_1.htm">WriteCollection</a></td><td>
            Writes the supplied Collection to a <span class="noLink">Stream</span>.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_WriteCollection.htm">WriteCollection</a></td><td>
            Writes the supplied Collection to a <span class="noLink">Stream</span>.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_WriteNullable.htm">WriteNullable</a></td><td>
            Writes the supplied string to a <span class="noLink">Stream</span> 
            in UTF8 encoding with a prefix if the value is null
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_WriteObject.htm">WriteObject</a></td><td>
            Encodes an object on a stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_WriteWithLength.htm">WriteWithLength</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> along with prefixing the length 
            so it can be properly read as a unit.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Gemstone_IO.htm">Gemstone.IO Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><span class="site-footer-credits">
<a href="https://gemstone.github.io/common/" target="_self">Documentation Home</a>  •  <a href="https://www.nuget.org/packages/Gemstone.Common/" target="_blank">Gemstone Common Library on NuGet</a><br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/gemstone/common/blob/master/LICENSE" target="_blank" rel="noopener noreferrer">Copyright © 2020 Grid Protection Alliance</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40gridprotectionalliance.org?Subject=Gemstone%20Common%20Library">GPA Support</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script><script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=Gemstone%20Common%20Library: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script></body></html>