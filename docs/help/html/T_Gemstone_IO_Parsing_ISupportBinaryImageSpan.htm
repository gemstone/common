<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ISupportBinaryImageSpan Interface</title><meta name="Title" content="ISupportBinaryImageSpan" /><meta name="Help.Id" content="T:Gemstone.IO.Parsing.ISupportBinaryImageSpan" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Gemstone.IO.Parsing" /><meta name="guid" content="T_Gemstone_IO_Parsing_ISupportBinaryImageSpan" /><meta name="Description" content="Span-optimized binary image production/consumption with buffered I/O helpers. Optional companion to ; most callers only need to implement the two span methods. Everything else has sensible defaults." /><meta name="tocFile" content="../toc/IDY.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://gemstone.github.io/common/"><img alt="GPA Gemstone Library" src="../icons/gemstone-square-48.png" /></a></div><div id="DocumentationTitle" class="level-item">Gemstone Common Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="js">JavaScript</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>ISupport<wbr />Binary<wbr />Image<wbr />Span Interface</h1><div class="summary">
            Span-optimized binary image production/consumption with buffered I/O helpers.
            Optional companion to <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a>; most callers only need to
            implement the two span methods. Everything else has sensible defaults.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Gemstone_IO_Parsing.htm">Gemstone.IO.Parsing</a><br /><strong>Assembly:</strong> Gemstone.Common (in Gemstone.Common.dll) Version: 1.0.150 -- Release Build+64e3b411e1abfbd2d4d8a81e850c3909a0ce8731<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/Parsing/ISupportBinaryImageSpan.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">ISupportBinaryImageSpan</span> : <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/Parsing/ISupportBinaryImageSpan.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">ISupportBinaryImageSpan</span>
	<span class="keyword">Inherits</span> <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/Parsing/ISupportBinaryImageSpan.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">ISupportBinaryImageSpan</span> : <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="js"><div class="codeHeader"><span class="codeHeaderTitle">JavaScript</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/Parsing/ISupportBinaryImageSpan.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-js"><span class="identifier">Gemstone.IO.Parsing.ISupportBinaryImageSpan</span> = <span class="keyword">function</span>();
<span class="identifier">Gemstone.IO.Parsing.ISupportBinaryImageSpan</span>.createInterface('<span class="identifier">Gemstone.IO.Parsing.ISupportBinaryImageSpan</span>');</code></pre></div></div><dl class="implementsList"><dt>Implements</dt><dd><a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDNFASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_Gemstone_IO_Parsing_ISupportBinaryImage_BinaryLength.htm">BinaryLength</a></td><td>
            Gets the length of the binary image.
            <br />(Inherited from <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDHFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageSpan_GenerateBinaryImage.htm">GenerateBinaryImage(Span<span id="LSTB082DBC2_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTB082DBC2_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Writes this object's binary image to <span class="parameter">destination</span>.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImage_GenerateBinaryImage.htm">GenerateBinaryImage(<span id="LSTB082DBC2_2" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTB082DBC2_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
            Generates binary image of the object and copies it into the given buffer, for <a href="P_Gemstone_IO_Parsing_ISupportBinaryImage_BinaryLength.htm">BinaryLength</a> bytes.
            <br />(Inherited from <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageSpan_GetRequiredLength.htm">GetRequiredLength</a></td><td>
            Determines how many bytes are required to parse this instance from the given sequence.
            Default assumes fixed-size and returns <a href="P_Gemstone_IO_Parsing_ISupportBinaryImage_BinaryLength.htm">BinaryLength</a>.
            Override for variable-length formats (peek a header, etc.).
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageSpan_ParseBinaryImage_1.htm">ParseBinaryImage(ReadOnlySpan<span id="LSTB082DBC2_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTB082DBC2_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Parses this object's state from <span class="parameter">source</span>.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageSpan_ParseBinaryImage.htm">ParseBinaryImage(ReadOnlySequence<span id="LSTB082DBC2_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTB082DBC2_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Boolean)</a></td><td>
            Parses from a <span class="noLink">ReadOnlySequence<span id="LSTB082DBC2_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTB082DBC2_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> and returns bytes consumed.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImage_ParseBinaryImage.htm">ParseBinaryImage(<span id="LSTB082DBC2_10" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTB082DBC2_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Initializes object by parsing the specified <span class="parameter">buffer</span> containing a binary image.
            <br />(Inherited from <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageSpan_TryGenerateBinaryImage.htm">TryGenerateBinaryImage</a></td><td>
            Attempts to write this object's binary image to the specified <span class="parameter">destination</span> span.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageSpan_TryParse.htm">TryParse</a></td><td>
            Parses from a streaming reader; advances by bytes consumed.
            Implemented in terms of <a href="M_Gemstone_IO_Parsing_ISupportBinaryImageSpan_ParseBinaryImage.htm">ParseBinaryImage(ReadOnlySequence<span id="LSTB082DBC2_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTB082DBC2_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Boolean)</a>.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageSpan_TryParseBinaryImage.htm">TryParseBinaryImage</a></td><td>
            Attempts to parse this object's state from the specified <span class="parameter">source</span> span.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageSpan_WriteBinaryImage.htm">WriteBinaryImage</a></td><td>
            Writes this object's binary image to the specified <span class="parameter">writer</span>.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDAFASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageExtensions_BinaryImage.htm">BinaryImage</a></td><td>
            Returns a binary image of an object that implements <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a>.
            <br />(Defined by <a href="T_Gemstone_IO_Parsing_ISupportBinaryImageExtensions.htm">ISupportBinaryImageExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageExtensions_BinaryImageAsync.htm">BinaryImageAsync</a></td><td>
            Asynchronously returns a binary image of an object that implements <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a>.
            <br />(Defined by <a href="T_Gemstone_IO_Parsing_ISupportBinaryImageExtensions.htm">ISupportBinaryImageExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageExtensions_CopyBinaryImageToStream.htm">CopyBinaryImageToStream</a></td><td>
            Copies the binary image of the specified <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a> to the provided <span class="noLink">Stream</span>.
            <br />(Defined by <a href="T_Gemstone_IO_Parsing_ISupportBinaryImageExtensions.htm">ISupportBinaryImageExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageExtensions_CopyBinaryImageToStreamAsync.htm">CopyBinaryImageToStreamAsync</a></td><td>
            Asynchronously copies the binary image of an object that implements <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a> to the specified <span class="noLink">Stream</span>.
            <br />(Defined by <a href="T_Gemstone_IO_Parsing_ISupportBinaryImageExtensions.htm">ISupportBinaryImageExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageExtensions_ParseBinaryImageFromStream.htm">ParseBinaryImageFromStream</a></td><td>
            Parses a binary image from the specified <span class="noLink">Stream</span> into an object that implements <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a>.
            <br />(Defined by <a href="T_Gemstone_IO_Parsing_ISupportBinaryImageExtensions.htm">ISupportBinaryImageExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_ISupportBinaryImageExtensions_ParseBinaryImageFromStreamAsync.htm">ParseBinaryImageFromStreamAsync</a></td><td>
            Asynchronously parses a binary image from the specified <span class="noLink">Stream</span> into an object that implements <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a>.
            <br />(Defined by <a href="T_Gemstone_IO_Parsing_ISupportBinaryImageExtensions.htm">ISupportBinaryImageExtensions</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Gemstone_IO_Parsing.htm">Gemstone.IO.Parsing Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><span class="site-footer-credits">
<a href="https://gemstone.github.io/common/" target="_self">Documentation Home</a>  •  <a href="https://www.nuget.org/packages/Gemstone.Common/" target="_blank">Gemstone Common Library on NuGet</a><br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/gemstone/common/blob/master/LICENSE" target="_blank" rel="noopener noreferrer">Copyright © 2020 Grid Protection Alliance</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40gridprotectionalliance.org?Subject=Gemstone%20Common%20Library">GPA Support</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script><script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=Gemstone%20Common%20Library: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script></body></html>