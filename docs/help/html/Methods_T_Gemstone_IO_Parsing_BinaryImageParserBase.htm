<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>BinaryImageParserBase Methods</title><meta name="Title" content="Methods" /><meta name="Help.Id" content="Methods.T:Gemstone.IO.Parsing.BinaryImageParserBase" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Gemstone.IO.Parsing" /><meta name="guid" content="Methods_T_Gemstone_IO_Parsing_BinaryImageParserBase" /><meta name="tocFile" content="../toc/IDBY.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://gemstone.github.io/common/"><img alt="GPA Gemstone Library" src="../icons/gemstone-square-48.png" /></a></div><div id="DocumentationTitle" class="level-item">Gemstone Common Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="js">JavaScript</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Binary<wbr />Image<wbr />Parser<wbr />Base Methods</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="ID0SB0DASection"><table id="MethodList" class="table is-hoverable"><tr><td><span class="noLink">BeginRead</span></td><td>Begins an asynchronous read operation. (Consider using <span class="noLink">ReadAsync(<span id="LSTBFD40E8D_0" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_1" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span> instead.)<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">BeginWrite</span></td><td>Begins an asynchronous write operation. (Consider using <span class="noLink">WriteAsync(<span id="LSTBFD40E8D_2" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span> instead.)<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">Close</span></td><td>Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream. Instead of calling this method, ensure that the stream is properly disposed.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyTo(Stream)</span></td><td>Reads the bytes from the current stream and writes them to another stream. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyTo(Stream, Int32)</span></td><td>Reads the bytes from the current stream and writes them to another stream, using a specified buffer size. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyToAsync(Stream)</span></td><td>Asynchronously reads the bytes from the current stream and writes them to another stream. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyToAsync(Stream, Int32)</span></td><td>Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyToAsync(Stream, CancellationToken)</span></td><td>Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified cancellation token. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CopyToAsync(Stream, Int32, CancellationToken)</span></td><td>Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token. Both streams positions are advanced by the number of bytes copied.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">CreateWaitHandle</span></td><td>Allocates a <span class="noLink">WaitHandle</span> object.<br />(Inherited from <span class="noLink">Stream</span>)<br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><span class="noLink">Dispose<span id="LSTBFD40E8D_4" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span></td><td>Releases all resources used by the <span class="noLink">Stream</span>.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">Dispose(Boolean)</span></td><td>Releases the unmanaged resources used by the <span class="noLink">Stream</span> and optionally releases the managed resources.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">DisposeAsync</span></td><td>Asynchronously releases the unmanaged resources used by the <span class="noLink">Stream</span>.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">EndRead</span></td><td>Waits for the pending asynchronous read to complete. (Consider using <span class="noLink">ReadAsync(<span id="LSTBFD40E8D_5" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_6" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span> instead.)<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">EndWrite</span></td><td>Ends an asynchronous write operation. (Consider using <span class="noLink">WriteAsync(<span id="LSTBFD40E8D_7" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_8" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span> instead.)<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">Finalize</span></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_Flush.htm">Flush</a></td><td>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data
            to be written to the underlying device.
            <br />(Overrides <span class="noLink">Stream<span id="LSTBFD40E8D_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Flush<span id="LSTBFD40E8D_10" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td></tr><tr><td><span class="noLink">FlushAsync<span id="LSTBFD40E8D_11" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span></td><td>Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">FlushAsync(CancellationToken)</span></td><td>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">GetLifetimeService</span></td><td>Retrieves the current lifetime service object that controls the lifetime policy for this instance.<br />(Inherited from <span class="noLink">MarshalByRefObject</span>)<br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">InitializeLifetimeService</span></td><td>Obtains a lifetime service object to control the lifetime policy for this instance.<br />(Inherited from <span class="noLink">MarshalByRefObject</span>)<br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><span class="noLink">MemberwiseClone<span id="LSTBFD40E8D_12" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">MemberwiseClone(Boolean)</span></td><td>Creates a shallow copy of the current <span class="noLink">MarshalByRefObject</span> object.<br />(Inherited from <span class="noLink">MarshalByRefObject</span>)</td></tr><tr><td><span class="noLink">ObjectInvariant</span></td><td>Provides support for a <span class="noLink">Contract</span>.<br />(Inherited from <span class="noLink">Stream</span>)<br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_OnBufferParsed.htm">OnBufferParsed</a></td><td>
            Raises the <a href="E_Gemstone_IO_Parsing_BinaryImageParserBase_BufferParsed.htm">BufferParsed</a> event.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_OnDataDiscarded.htm">OnDataDiscarded</a></td><td>
            Raises the <a href="E_Gemstone_IO_Parsing_BinaryImageParserBase_DataDiscarded.htm">DataDiscarded</a> event.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_OnParsingException.htm">OnParsingException</a></td><td>
            Raises the <a href="E_Gemstone_IO_Parsing_BinaryImageParserBase_ParsingException.htm">ParsingException</a> event.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_Parse.htm">Parse</a></td><td>
            Parses the object implementing the <a href="T_Gemstone_IO_Parsing_ISupportBinaryImage.htm">ISupportBinaryImage</a> interface.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_ParseFrame.htm">ParseFrame</a></td><td>
            Protocol specific frame parsing algorithm.
            </td></tr><tr><td><span class="noLink">Read(Span<span id="LSTBFD40E8D_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTBFD40E8D_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_Read.htm">Read(<span id="LSTBFD40E8D_15" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_16" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            The parser is designed as a write only stream, so this method is not implemented.
            <br />(Overrides <span class="noLink">Stream<span id="LSTBFD40E8D_17" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Read(<span id="LSTBFD40E8D_18" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_19" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span>)</td></tr><tr><td><span class="noLink">ReadAsync(Memory<span id="LSTBFD40E8D_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTBFD40E8D_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</span></td><td>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadAsync(<span id="LSTBFD40E8D_22" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_23" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span></td><td>Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadAsync(<span id="LSTBFD40E8D_24" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_25" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, CancellationToken)</span></td><td>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadAtLeast</span></td><td>Reads at least a minimum number of bytes from the current stream and advances the position within the stream by the number of bytes read.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadAtLeastAsync</span></td><td>Asynchronously reads at least a minimum number of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadByte</span></td><td>Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadExactly(Span<span id="LSTBFD40E8D_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTBFD40E8D_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>Reads bytes from the current stream and advances the position within the stream until the <span class="parameter">buffer</span> is filled.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadExactly(<span id="LSTBFD40E8D_28" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_29" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span></td><td>Reads <span class="parameter">count</span> number of bytes from the current stream and advances the position within the stream.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadExactlyAsync(Memory<span id="LSTBFD40E8D_30" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTBFD40E8D_31" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</span></td><td>Asynchronously reads bytes from the current stream, advances the position within the stream until the <span class="parameter">buffer</span> is filled, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">ReadExactlyAsync(<span id="LSTBFD40E8D_32" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_33" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, CancellationToken)</span></td><td>Asynchronously reads <span class="parameter">count</span> number of bytes from the current stream, advances the position within the stream, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_Seek.htm">Seek</a></td><td>
            The parser is designed as a write only stream, so this method is not implemented.
            <br />(Overrides <span class="noLink">Stream<span id="LSTBFD40E8D_34" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Seek(Int64, SeekOrigin)</span>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_SetLength.htm">SetLength</a></td><td>
            The parser is designed as a write only stream, so this method is not implemented.
            <br />(Overrides <span class="noLink">Stream<span id="LSTBFD40E8D_35" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SetLength(Int64)</span>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_Start.htm">Start</a></td><td>
            Start the streaming data parser.
            </td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_Stop.htm">Stop</a></td><td>
            Stops the streaming data parser.
            </td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">Write(ReadOnlySpan<span id="LSTBFD40E8D_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTBFD40E8D_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><a href="M_Gemstone_IO_Parsing_BinaryImageParserBase_Write.htm">Write(<span id="LSTBFD40E8D_38" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_39" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td>
            Writes a sequence of bytes onto the stream for parsing.
            <br />(Overrides <span class="noLink">Stream<span id="LSTBFD40E8D_40" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Write(<span id="LSTBFD40E8D_41" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_42" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span>)</td></tr><tr><td><span class="noLink">WriteAsync(ReadOnlyMemory<span id="LSTBFD40E8D_43" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Byte<span id="LSTBFD40E8D_44" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, CancellationToken)</span></td><td>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">WriteAsync(<span id="LSTBFD40E8D_45" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_46" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span></td><td>Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">WriteAsync(<span id="LSTBFD40E8D_47" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_48" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, CancellationToken)</span></td><td>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr><tr><td><span class="noLink">WriteByte</span></td><td>Writes a byte to the current position in the stream and advances the position within the stream by one byte.<br />(Inherited from <span class="noLink">Stream</span>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDADASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_CopyTo.htm">CopyTo</a></td><td>
            Writes the contents of a stream to the provided stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_EnumExtensions_EnumExtensions_GetEnumValueOrDefault.htm">GetEnumValueOrDefault</a></td><td>
            Gets the enumeration constant for value, if defined in the enumeration, or a default value.
            <br />(Defined by <a href="T_Gemstone_EnumExtensions_EnumExtensions.htm">EnumExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_EnumExtensions_EnumExtensions_GetEnumValueOrDefault__1.htm">GetEnumValueOrDefault<span id="LSTBFD40E8D_49" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTBFD40E8D_50" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Gets the enumeration constant for this value, if defined in the enumeration, or a default value.
            <br />(Defined by <a href="T_Gemstone_EnumExtensions_EnumExtensions.htm">EnumExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Read7BitUInt32.htm">Read7BitUInt32</a></td><td>
            Reads the 7-bit encoded value from the stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadAll.htm">ReadAll</a></td><td>
            Reads all of the provided bytes. Will not return prematurely, 
            but continue to execute a <span class="noLink">Read(<span id="LSTBFD40E8D_51" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTBFD40E8D_52" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</span> command until the entire
            <span class="parameter">length</span> has been read.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadBoolean.htm">ReadBoolean</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadBytes.htm">ReadBytes</a></td><td>
            Reads a byte array from a <span class="noLink">Stream</span>. 
            The number of bytes should be prefixed in the stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadBytes_1.htm">ReadBytes</a></td><td>
            Reads a byte array from a <span class="noLink">Stream</span>. 
            The number of bytes should be prefixed in the stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadChar.htm">ReadChar</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadDateTime.htm">ReadDateTime</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadDecimal.htm">ReadDecimal</a></td><td>
            Reads a decimal from the stream in Little Endian bytes.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadDouble.htm">ReadDouble</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadGuid.htm">ReadGuid</a></td><td>
            Reads a Guid from the stream in Little Endian bytes.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadInt16.htm">ReadInt16</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadInt32.htm">ReadInt32</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadInt32Collection.htm">ReadInt32Collection</a></td><td>
            Writes the supplied string to a <span class="noLink">Stream</span> in UTF8 encoding.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadInt64.htm">ReadInt64</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadNextByte.htm">ReadNextByte</a></td><td>
            Read a byte from the stream. 
            Will throw an exception if the end of the stream has been reached.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadNullableString.htm">ReadNullableString</a></td><td>
            Reads a string from a <span class="noLink">Stream</span> that was encoded in UTF8. 
            Value can be null and is prefixed with a boolean.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadObject.htm">ReadObject</a></td><td>
            Reads an object from a stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadSByte.htm">ReadSByte</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadSingle.htm">ReadSingle</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadStream.htm">ReadStream</a></td><td>
            Reads entire <span class="noLink">Stream</span> contents, and returns <span class="noLink">Byte</span> array of data.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadString.htm">ReadString</a></td><td>
            Reads a string from a <span class="noLink">Stream</span> that was encoded in UTF8.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadStringCollection.htm">ReadStringCollection</a></td><td>
            Writes the supplied string to a <span class="noLink">Stream</span> in UTF8 encoding.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadUInt16.htm">ReadUInt16</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadUInt32.htm">ReadUInt32</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_ReadUInt64.htm">ReadUInt64</a></td><td>
            Reads the value from the stream in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_1.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to
             in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_2.htm">Write</a></td><td>
            Writes the entire buffer to the <span class="parameter">stream</span><br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_3.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_4.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_5.htm">Write</a></td><td>
            Writes the supplied string to a <span class="noLink">Stream</span> in UTF8 encoding.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_6.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_7.htm">Write</a></td><td>
            Writes a guid in little endian bytes to the stream
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_8.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_9.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_10.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_11.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_12.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_13.htm">Write</a></td><td>
            Writes the supplied string to a <span class="noLink">Stream</span> in UTF8 encoding.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_14.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_15.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_Write_16.htm">Write</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> in little endian format.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_WriteCollection_1.htm">WriteCollection</a></td><td>
            Writes the supplied Collection to a <span class="noLink">Stream</span>.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_WriteCollection.htm">WriteCollection</a></td><td>
            Writes the supplied Collection to a <span class="noLink">Stream</span>.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_WriteNullable.htm">WriteNullable</a></td><td>
            Writes the supplied string to a <span class="noLink">Stream</span> 
            in UTF8 encoding with a prefix if the value is null
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_WriteObject.htm">WriteObject</a></td><td>
            Encodes an object on a stream.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_IO_StreamExtensions_StreamExtensions_WriteWithLength.htm">WriteWithLength</a></td><td>
            Writes the supplied <span class="parameter">value</span> to 
            <span class="parameter">stream</span> along with prefixing the length 
            so it can be properly read as a unit.
            <br />(Defined by <a href="T_Gemstone_IO_StreamExtensions_StreamExtensions.htm">StreamExtensions</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_Gemstone_IO_Parsing_BinaryImageParserBase.htm">BinaryImageParserBase Class</a></div><div><a href="N_Gemstone_IO_Parsing.htm">Gemstone.IO.Parsing Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><span class="site-footer-credits">
<a href="https://gemstone.github.io/common/" target="_self">Documentation Home</a>  •  <a href="https://www.nuget.org/packages/Gemstone.Common/" target="_blank">Gemstone Common Library on NuGet</a><br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/gemstone/common/blob/master/LICENSE" target="_blank" rel="noopener noreferrer">Copyright © 2020 Grid Protection Alliance</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40gridprotectionalliance.org?Subject=Gemstone%20Common%20Library">GPA Support</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>