<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>SafeFileWatcher Class</title><meta name="Title" content="SafeFileWatcher" /><meta name="Help.Id" content="T:Gemstone.IO.SafeFileWatcher" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Gemstone.IO" /><meta name="guid" content="T_Gemstone_IO_SafeFileWatcher" /><meta name="Description" content="Represents a wrapper around the native .NET that avoids problems with dangling references when using a file watcher instance as a class member that never gets disposed." /><meta name="tocFile" content="../toc/IDX.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://gemstone.github.io/common/"><img alt="GPA Gemstone Library" src="../icons/gemstone-square-48.png" /></a></div><div id="DocumentationTitle" class="level-item">Gemstone Common Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="js">JavaScript</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Safe<wbr />File<wbr />Watcher Class</h1><div class="summary">
            Represents a wrapper around the native .NET <span class="noLink">FileSystemWatcher</span> that avoids problems with
            dangling references when using a file watcher instance as a class member that never gets disposed.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Gemstone_IO.htm">Gemstone.IO</a><br /><strong>Assembly:</strong> Gemstone.Common (in Gemstone.Common.dll) Version: 1.0.143 -- Release Build+524337d392fd5616b12b50022b004322b9e7c330<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/SafeFileWatcher.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="noLink">SecurityCriticalAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SafeFileWatcher</span> : <span class="noLink">IDisposable</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/SafeFileWatcher.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="noLink">SecurityCriticalAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">SafeFileWatcher</span>
	<span class="keyword">Implements</span> <span class="noLink">IDisposable</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/SafeFileWatcher.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp">[<span class="noLink">SecurityCriticalAttribute</span>]
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">SafeFileWatcher</span> : <span class="noLink">IDisposable</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="js"><div class="codeHeader"><span class="codeHeaderTitle">JavaScript</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/IO/SafeFileWatcher.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-js"><span class="identifier">Gemstone.IO.SafeFileWatcher</span> = <span class="keyword">function</span>();

<span class="identifier">Type</span>.createClass(
	'Gemstone.IO.SafeFileWatcher',
	null,
	<span class="noLink">IDisposable</span>);</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">SafeFileWatcher</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><span class="noLink">IDisposable</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><p>
            The design goal of the SafeFileWatcher is to avoid accidental memory leaks caused by use of .NET's native
            file system watcher when used as a member of a class that consumers fail to properly dispose. If a class
            has a reference to a file watcher as a member variable and attaches to the file watcher's events, the
            file watcher will maintain a reference the parent class so it can call its event handler. If the parent
            class is not disposed properly, the file watcher will thus not be disposed and will maintain the
            reference to the parent class - the garbage collector will never collect the parent because it has a
            valid reference and no collection means the parent finalizer will never get called and the file system
            watcher will never get disposed. Creating multiple instances of parent class and not disposing of them
            will cause a memory leak even with a properly designed disposable pattern. Using the SafeFileWatcher
            instead of directly using the FileSystemWatcher will resolve this potential issue.
            </p><p>
            Note that component model implementation is not fully replicated - if you are using a file system watcher
            on a design surface, this safety wrapper will usually not be needed. This class has benefit when a class
            will dynamically use a file watcher and needs to make sure any unmanaged resources get properly released
            even if a consumer neglects to call the dispose function.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDAHGASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="M_Gemstone_IO_SafeFileWatcher__ctor.htm">SafeFileWatcher<span id="LSTE52CA945_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Initializes a new instance of the <span class="selflink">SafeFileWatcher</span> class.
            </td></tr><tr><td><a href="M_Gemstone_IO_SafeFileWatcher__ctor_1.htm">SafeFileWatcher(String)</a></td><td>
            Initializes a new instance of the <span class="selflink">SafeFileWatcher</span> class, given the specified directory to monitor.
            </td></tr><tr><td><a href="M_Gemstone_IO_SafeFileWatcher__ctor_2.htm">SafeFileWatcher(String, String)</a></td><td>
            Initializes a new instance of the <span class="selflink">SafeFileWatcher</span> class, given the specified directory and type of files to monitor.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDSGASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_Gemstone_IO_SafeFileWatcher_EnableRaisingEvents.htm">EnableRaisingEvents</a></td><td>
            Gets or sets a value indicating whether the component is enabled.
            </td></tr><tr><td><a href="P_Gemstone_IO_SafeFileWatcher_Filter.htm">Filter</a></td><td>
            Gets or sets the filter string used to determine what files are monitored in a directory.
            </td></tr><tr><td><a href="P_Gemstone_IO_SafeFileWatcher_IncludeSubdirectories.htm">IncludeSubdirectories</a></td><td>
            Gets or sets a value indicating whether subdirectories within the specified path should be monitored.
            </td></tr><tr><td><a href="P_Gemstone_IO_SafeFileWatcher_InternalBufferSize.htm">InternalBufferSize</a></td><td>
            Gets or sets the size of the internal buffer.
            </td></tr><tr><td><a href="P_Gemstone_IO_SafeFileWatcher_NotifyFilter.htm">NotifyFilter</a></td><td>
            Gets or sets the type of changes to watch for.
            </td></tr><tr><td><a href="P_Gemstone_IO_SafeFileWatcher_Path.htm">Path</a></td><td>
            Gets or sets the path of the directory to watch.
            </td></tr><tr><td><a href="P_Gemstone_IO_SafeFileWatcher_Site.htm">Site</a></td><td>
            Gets or sets an <span class="noLink">ISite</span> for the <span class="selflink">SafeFileWatcher</span>.
            </td></tr><tr><td><a href="P_Gemstone_IO_SafeFileWatcher_SynchronizingObject.htm">SynchronizingObject</a></td><td>
            Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDIGASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Gemstone_IO_SafeFileWatcher_BeginInit.htm">BeginInit</a></td><td>
            Begins the initialization of a <span class="selflink">SafeFileWatcher</span> used on a form or used by another component. The initialization occurs at run time.
            </td></tr><tr><td><a href="M_Gemstone_IO_SafeFileWatcher_Dispose.htm">Dispose<span id="LSTE52CA945_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Releases all the resources used by the <span class="selflink">SafeFileWatcher</span> object.
            </td></tr><tr><td><a href="M_Gemstone_IO_SafeFileWatcher_Dispose_1.htm">Dispose(Boolean)</a></td><td>
            Releases the unmanaged resources used by the <span class="selflink">SafeFileWatcher</span> object and optionally releases the managed resources.
            </td></tr><tr><td><a href="M_Gemstone_IO_SafeFileWatcher_EndInit.htm">EndInit</a></td><td>
            Ends the initialization of a <span class="selflink">SafeFileWatcher</span> used on a form or used by another component. The initialization occurs at run time.
            </td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><a href="M_Gemstone_IO_SafeFileWatcher_Finalize.htm">Finalize</a></td><td>
            Terminates <span class="selflink">SafeFileWatcher</span> instance making sure to release unmanaged resources.
            <br />(Overrides <span class="noLink">Object<span id="LSTE52CA945_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Finalize<span id="LSTE52CA945_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></span>)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">MemberwiseClone</span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><a href="M_Gemstone_IO_SafeFileWatcher_WaitForChanged.htm">WaitForChanged(WatcherChangeTypes)</a></td><td>
            A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.
            </td></tr><tr><td><a href="M_Gemstone_IO_SafeFileWatcher_WaitForChanged_1.htm">WaitForChanged(WatcherChangeTypes, Int32)</a></td><td>
            A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Events</h2><div id="IDCGASection"><table id="EventList" class="table is-hoverable"><tr><td><a href="E_Gemstone_IO_SafeFileWatcher_Changed.htm">Changed</a></td><td>
            Occurs when a file or directory in the specified <a href="P_Gemstone_IO_SafeFileWatcher_Path.htm">Path</a> is changed.
            </td></tr><tr><td><a href="E_Gemstone_IO_SafeFileWatcher_Created.htm">Created</a></td><td>
            Occurs when a file or directory in the specified <a href="P_Gemstone_IO_SafeFileWatcher_Path.htm">Path</a> is created.
            </td></tr><tr><td><a href="E_Gemstone_IO_SafeFileWatcher_Deleted.htm">Deleted</a></td><td>
            Occurs when a file or directory in the specified <a href="P_Gemstone_IO_SafeFileWatcher_Path.htm">Path</a> is deleted.
            </td></tr><tr><td><a href="E_Gemstone_IO_SafeFileWatcher_Error.htm">Error</a></td><td>
            Occurs when the internal buffer overflows.
            </td></tr><tr><td><a href="E_Gemstone_IO_SafeFileWatcher_Renamed.htm">Renamed</a></td><td>
            Occurs when a file or directory in the specified <a href="P_Gemstone_IO_SafeFileWatcher_Path.htm">Path</a> is renamed.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDAGASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="M_Gemstone_EnumExtensions_EnumExtensions_GetEnumValueOrDefault.htm">GetEnumValueOrDefault</a></td><td>
            Gets the enumeration constant for value, if defined in the enumeration, or a default value.
            <br />(Defined by <a href="T_Gemstone_EnumExtensions_EnumExtensions.htm">EnumExtensions</a>)</td></tr><tr><td><a href="M_Gemstone_EnumExtensions_EnumExtensions_GetEnumValueOrDefault__1.htm">GetEnumValueOrDefault<span id="LSTE52CA945_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LSTE52CA945_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Gets the enumeration constant for this value, if defined in the enumeration, or a default value.
            <br />(Defined by <a href="T_Gemstone_EnumExtensions_EnumExtensions.htm">EnumExtensions</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Gemstone_IO.htm">Gemstone.IO Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Events</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><span class="site-footer-credits">
<a href="https://gemstone.github.io/common/" target="_self">Documentation Home</a>  •  <a href="https://www.nuget.org/packages/Gemstone.Common/" target="_blank">Gemstone Common Library on NuGet</a><br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/gemstone/common/blob/master/LICENSE" target="_blank" rel="noopener noreferrer">Copyright © 2020 Grid Protection Alliance</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40gridprotectionalliance.org?Subject=Gemstone%20Common%20Library">GPA Support</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script><script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=Gemstone%20Common%20Library: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script></body></html>