<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>StringExtensions Class</title><meta name="Title" content="StringExtensions" /><meta name="Help.Id" content="T:Gemstone.StringExtensions.StringExtensions" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Gemstone.StringExtensions" /><meta name="guid" content="T_Gemstone_StringExtensions_StringExtensions" /><meta name="Description" content="Defines extension functions related to string manipulation." /><meta name="tocFile" content="../toc/ID0HB0.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://gemstone.github.io/common/"><img alt="GPA Gemstone Library" src="../icons/gemstone-square-48.png" /></a></div><div id="DocumentationTitle" class="level-item">Gemstone Common Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="js">JavaScript</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>String<wbr />Extensions Class</h1><div class="summary">
            Defines extension functions related to string manipulation.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Gemstone_StringExtensions.htm">Gemstone.StringExtensions</a><br /><strong>Assembly:</strong> Gemstone.Common (in Gemstone.Common.dll) Version: 1.0.138 -- Release Build+dacff88cce10d287c7434d5aac59c76948c712b1<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/StringExtensions/StringExtensions.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">StringExtensions</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/StringExtensions/StringExtensions.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="noLink">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">StringExtensions</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/StringExtensions/StringExtensions.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp">[<span class="noLink">ExtensionAttribute</span>]
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">StringExtensions</span> <span class="keyword">abstract</span> <span class="keyword">sealed</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="js"><div class="codeHeader"><span class="codeHeaderTitle">JavaScript</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/gemstone/common/blob/master/src/Gemstone/StringExtensions/StringExtensions.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="Create a new issue: https://github.com/gemstone/common/issues/new " target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-js"><span class="identifier">Gemstone.StringExtensions.StringExtensions</span> = <span class="keyword">function</span>();

<span class="identifier">Type</span>.createClass(
	'Gemstone.StringExtensions.StringExtensions');</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">StringExtensions</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDAFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_Base64Decode.htm">Base64Decode</a></td><td>
            Decodes a given base-64 encoded string encoded with <a href="M_Gemstone_StringExtensions_StringExtensions_Base64Encode.htm">Base64Encode(String)</a>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_Base64Encode.htm">Base64Encode</a></td><td>
            Encodes a string into a base-64 string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_CenterText.htm">CenterText(String, Int32)</a></td><td>
            Centers text within the specified maximum length, biased to the left.
            Text will be padded to the left and right with spaces.
            If value is greater than specified maximum length, value returned will be truncated from the right.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_CenterText_1.htm">CenterText(String, Int32, Char)</a></td><td>
            Centers text within the specified maximum length, biased to the left.
            Text will be padded to the left and right with specified padding character.
            If value is greater than specified maximum length, value returned will be truncated from the right.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_CharCount.htm">CharCount</a></td><td>
            Counts the total number of the occurrences of a character in the given string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ConvertToType.htm">ConvertToType(String, Type)</a></td><td>
            Converts this string into the specified type.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ConvertToType_1.htm">ConvertToType(String, Type, CultureInfo, Boolean)</a></td><td>
            Converts this string into the specified type.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ConvertToType__1.htm">ConvertToType<span id="LST8C4F5686_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST8C4F5686_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(String)</a></td><td>
            Converts this string into the specified type.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ConvertToType__1_1.htm">ConvertToType<span id="LST8C4F5686_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST8C4F5686_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(String, CultureInfo)</a></td><td>
            Converts this string into the specified type.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_EnsureEnd.htm">EnsureEnd(String, Char)</a></td><td>
            Ensures a string ends with a specific character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_EnsureEnd_2.htm">EnsureEnd(String, String)</a></td><td>
            Ensures a string ends with a specific string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_EnsureEnd_1.htm">EnsureEnd(String, Char, Boolean)</a></td><td>
            Ensures a string ends with a specific character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_EnsureStart.htm">EnsureStart(String, Char)</a></td><td>
            Ensures a string starts with a specific character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_EnsureStart_2.htm">EnsureStart(String, String)</a></td><td>
            Ensures a string starts with a specific string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_EnsureStart_1.htm">EnsureStart(String, Char, Boolean)</a></td><td>
            Ensures a string starts with a specific character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_GetComparer.htm">GetComparer</a></td><td>
            Gets appropriate <span class="noLink">StringComparer</span> for the specified <span class="noLink">StringComparison</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_GetSegments.htm">GetSegments</a></td><td>
            Turns source string into an array of string segments - each with a set maximum width - for parsing or displaying.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfNot.htm">IndexOfNot(String, Char, Int32)</a></td><td>
            Finds the first index that does not match the given <span class="parameter">character</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfNot_1.htm">IndexOfNot(String, <span id="LST8C4F5686_4" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST8C4F5686_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
            Finds the first index that is NOT included in testChars
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfNot_2.htm">IndexOfNot(String, Func<span id="LST8C4F5686_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char, Boolean<span id="LST8C4F5686_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Finds the first index that does NOT pass the <span class="parameter">characterTestFunction</span> delegate function.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfPrevious.htm">IndexOfPrevious(String, Char, Int32)</a></td><td>
            Searches a string from right to left for the next instance of a specified character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfPrevious_1.htm">IndexOfPrevious(String, Func<span id="LST8C4F5686_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char, Boolean<span id="LST8C4F5686_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Searches a string from right to left for the next instance of a character passing the specified delegate.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfPrevious_2.htm">IndexOfPrevious(String, String, Int32, Boolean)</a></td><td>
            Searches a string from right to left for the next instance of a specified string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfPreviousNot.htm">IndexOfPreviousNot(String, Char, Int32)</a></td><td>
            Searches a string from right to left for the next instance of a character that is not the specified character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfPreviousNot_1.htm">IndexOfPreviousNot(String, <span id="LST8C4F5686_10" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST8C4F5686_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32)</a></td><td>
            Searches a string from right to left for the next instance of a character that is not contained in the specified collection of characters.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfPreviousNot_2.htm">IndexOfPreviousNot(String, Func<span id="LST8C4F5686_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char, Boolean<span id="LST8C4F5686_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Int32)</a></td><td>
            Searches a string from right to left for the next instance of a character that does not pass the given delegate function.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfRepeatedChar.htm">IndexOfRepeatedChar(String)</a></td><td>
            Searches a string for an instance of a repeated character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfRepeatedChar_1.htm">IndexOfRepeatedChar(String, Char)</a></td><td>
            Searches a string for a repeated instance of the specified <span class="parameter">characterToFind</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfRepeatedChar_3.htm">IndexOfRepeatedChar(String, Int32)</a></td><td>
            Searches a string for an instance of a repeated character from specified <span class="parameter">startIndex</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IndexOfRepeatedChar_2.htm">IndexOfRepeatedChar(String, Char, Int32)</a></td><td>
            Searches a string for a repeated instance of the specified <span class="parameter">characterToFind</span> from specified <span class="parameter">startIndex</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_Interpolate.htm">Interpolate(String, IEnumerable<span id="LST8C4F5686_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>KeyValuePair<span id="LST8C4F5686_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>String, Object<span id="LST8C4F5686_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span><span id="LST8C4F5686_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
             Applies string interpolation to the given format string at runtime.
             </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_Interpolate__1.htm">Interpolate<span id="LST8C4F5686_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST8C4F5686_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(String, T)</a></td><td>
            Applies string interpolation to the given format string at runtime.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IsAllDigits.htm">IsAllDigits</a></td><td>
            Tests to see if a string is contains only digits based on Char.IsDigit function.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IsAllLetters.htm">IsAllLetters(String)</a></td><td>
            Tests to see if a string contains only letters.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IsAllLetters_1.htm">IsAllLetters(String, Boolean)</a></td><td>
            Tests to see if a string contains only letters.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IsAllLettersOrDigits.htm">IsAllLettersOrDigits(String)</a></td><td>
            Tests to see if a string contains only letters or digits.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IsAllLettersOrDigits_1.htm">IsAllLettersOrDigits(String, Boolean)</a></td><td>
            Tests to see if a string contains only letters or digits.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IsAllLower.htm">IsAllLower</a></td><td>
            Tests to see if a string's letters are all lower case.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IsAllNumbers.htm">IsAllNumbers</a></td><td>
            Tests to see if a string contains only numbers based on Char.IsNumber function.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_IsAllUpper.htm">IsAllUpper</a></td><td>
            Tests to see if a string's letters are all upper case.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_JoinKeyValuePairs.htm">JoinKeyValuePairs</a></td><td>
            Combines a dictionary of key-value pairs in to a string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_NotEmpty.htm">NotEmpty(String)</a></td><td>
            Ensures parameter is not an empty or null string. Returns a single space if test value is empty.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_NotEmpty_1.htm">NotEmpty(String, String)</a></td><td>
            Ensures parameter is not an empty or null string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ParseBoolean.htm">ParseBoolean</a></td><td>
            Parses a string intended to represent a boolean value.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ParseKeyValuePairs.htm">ParseKeyValuePairs</a></td><td>
            Parses key/value pair expressions from a string. Parameter pairs are delimited by <span class="parameter">keyValueDelimiter</span>
            and multiple pairs separated by <span class="parameter">parameterDelimiter</span>. Supports encapsulated nested expressions.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_QuoteUnwrap.htm">QuoteUnwrap(String, Char)</a></td><td>
            Unwraps quotes similar to Excel.  However, a little more predictable for unusual edge cases.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_QuoteUnwrap_1.htm">QuoteUnwrap(String, <span id="LST8C4F5686_20" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LST8C4F5686_21" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Unwraps quotes similar to Excel.  However, a little more predictable for unusual edge cases.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_QuoteWrap.htm">QuoteWrap</a></td><td>
            Wraps <span class="parameter">value</span> in the <span class="parameter">quoteChar</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RegexDecode.htm">RegexDecode</a></td><td>
            Decodes the specified Regular Expression character back into a standard Unicode character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveCharacter.htm">RemoveCharacter</a></td><td>
            Removes all characters matching the given <span class="parameter">characterToRemove</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveCharacters.htm">RemoveCharacters</a></td><td>
            Removes all characters passing delegate test from a string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveControlCharacters.htm">RemoveControlCharacters</a></td><td>
            Removes all control characters from a string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveCrLfs.htm">RemoveCrLfs</a></td><td>
            Removes all carriage returns and line feeds from a string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveDuplicates.htm">RemoveDuplicates</a></td><td>
            Removes duplicate character strings (adjoining replication) in a string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveDuplicateWhiteSpace.htm">RemoveDuplicateWhiteSpace(String)</a></td><td>
            Replaces all repeating white space with a single space.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveDuplicateWhiteSpace_1.htm">RemoveDuplicateWhiteSpace(String, Char)</a></td><td>
            Replaces all repeating white space with specified spacing character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveInvalidFileNameCharacters.htm">RemoveInvalidFileNameCharacters</a></td><td>
            Removes all invalid file name characters (\ / : * ? " &lt; &gt; |) from a string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveLeadingString.htm">RemoveLeadingString(String, Char, Boolean)</a></td><td>
            Removes one or more instances of a specified char from the beginning of a string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveLeadingString_1.htm">RemoveLeadingString(String, String, Boolean)</a></td><td>
            Removes one or more instances of a specified string from the beginning of a string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveLeadingZeros.htm">RemoveLeadingZeros</a></td><td>
            Assures that numeric value is a well formed number
            Adds a leading zero in front of a decimal, if present
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveNull.htm">RemoveNull</a></td><td>
            Removes the terminator ('\0') from a null terminated string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveTrailingString.htm">RemoveTrailingString(String, Char, Boolean)</a></td><td>
            Removes one or more instances of a character from the end of a string
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveTrailingString_1.htm">RemoveTrailingString(String, String, Boolean)</a></td><td>
            Removes one or more instances of a string from the end of a string
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_RemoveWhiteSpace.htm">RemoveWhiteSpace</a></td><td>
            Removes all white space (as defined by IsWhiteSpace) from a string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ReplaceCaseInsensitive.htm">ReplaceCaseInsensitive</a></td><td>
            Performs a case insensitive string replacement.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ReplaceCharacters.htm">ReplaceCharacters</a></td><td>
            Replaces all characters passing delegate test with specified replacement character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ReplaceControlCharacters.htm">ReplaceControlCharacters(String)</a></td><td>
            Replaces all control characters in a string with a single space.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ReplaceControlCharacters_1.htm">ReplaceControlCharacters(String, Char)</a></td><td>
            Replaces all control characters in a string with specified replacement character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ReplaceCrLfs.htm">ReplaceCrLfs</a></td><td>
            Replaces all carriage return and line feed characters (as well as CR/LF sequences) in a string with specified replacement character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ReplaceInvalidFileNameCharacters.htm">ReplaceInvalidFileNameCharacters</a></td><td>
            Replaces all invalid file name characters (\ / : * ? " &lt; &gt; |) in a string with the specified <span class="parameter">replacementCharacter</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ReplaceWhiteSpace.htm">ReplaceWhiteSpace</a></td><td>
            Replaces all white space characters (as defined by IsWhiteSpace) with specified replacement character.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_Reverse.htm">Reverse</a></td><td>
            Reverses the order of the characters in a string.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_StringCount.htm">StringCount</a></td><td>
            Counts the total number of the occurrences of string within a string
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_SubstringEnd.htm">SubstringEnd</a></td><td>
            Returns a string consisting of a specified number of characters from the end of a string "to the left"
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_SubstringPrevious.htm">SubstringPrevious</a></td><td>
            Returns a string consisting of a specified number of characters to the left (previous chars) from the provided startIndex
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ThrowIfNullOrEmpty.htm">ThrowIfNullOrEmpty</a></td><td>
            Throws an <span class="noLink">ArgumentNullException</span> if <span class="parameter">argument</span> is null -or-
            an <span class="noLink">ArgumentException</span> if <span class="parameter">argument</span> is Empty.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToCamelCase.htm">ToCamelCase</a></td><td>
            Converts first letter of string to lower-case.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToNonNullNorEmptyString__1.htm">ToNonNullNorEmptyString<span id="LST8C4F5686_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST8C4F5686_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Converts value to string; null objects, DBNull objects or empty strings will return specified <span class="parameter">nonNullNorEmptyValue</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToNonNullNorWhiteSpace__1.htm">ToNonNullNorWhiteSpace<span id="LST8C4F5686_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST8C4F5686_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Converts value to string; null objects, DBNull objects, empty strings or all white space strings will return specified <span class="parameter">nonNullNorWhiteSpaceValue</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToNonNullString.htm">ToNonNullString(String)</a></td><td>
            Makes sure returned string value is not null; if this string is null, empty string ("") will be returned. 
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToNonNullString__1.htm">ToNonNullString<span id="LST8C4F5686_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST8C4F5686_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T)</a></td><td>
            Converts value to string; null objects (or DBNull objects) will return an empty string (""). 
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToNonNullString__1_1.htm">ToNonNullString<span id="LST8C4F5686_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST8C4F5686_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T, String)</a></td><td>
            Converts value to string; null objects (or DBNull objects) will return specified <span class="parameter">nonNullValue</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToPascalCase.htm">ToPascalCase</a></td><td>
            Converts first letter of string to upper-case.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToSecureString.htm">ToSecureString</a></td><td>
            Converts the given string into a <span class="noLink">SecureString</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToSpacedLabel.htm">ToSpacedLabel</a></td><td>
            Converts the provided string, assumed to be title, pascal or camel case formatted, to a label with spaces before each capital letter, other than the first.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToStream.htm">ToStream</a></td><td>
            Converts string into a stream using the specified <span class="parameter">encoding</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToStreamAsync.htm">ToStreamAsync</a></td><td>
            Asynchronously converts string into a stream using the specified <span class="parameter">encoding</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToTitleCase.htm">ToTitleCase</a></td><td>
            Converts the provided string into title case (upper case first letter of each word).
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_ToUnsecureString.htm">ToUnsecureString</a></td><td>
            Converts the given <span class="noLink">SecureString</span> into a <span class="noLink">String</span>.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_TrimWithEllipsisEnd.htm">TrimWithEllipsisEnd</a></td><td>
            Places an ellipsis at the end of a string as it is trimmed to length specified.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_TrimWithEllipsisMiddle.htm">TrimWithEllipsisMiddle</a></td><td>
            Places an ellipsis in the middle of a string as it is trimmed to length specified.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_TruncateLeft.htm">TruncateLeft</a></td><td>
            Truncates the provided string from the left if it is longer that specified length.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_TruncateRight.htm">TruncateRight</a></td><td>
            Truncates the provided string from the right if it is longer that specified length.
            </td></tr><tr><td><a href="M_Gemstone_StringExtensions_StringExtensions_UriEncode.htm">UriEncode</a></td><td>
            Escapes string using URL encoding.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Gemstone_StringExtensions.htm">Gemstone.StringExtensions Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><span class="site-footer-credits">
<a href="https://gemstone.github.io/common/" target="_self">Documentation Home</a>  •  <a href="https://www.nuget.org/packages/Gemstone.Common/" target="_blank">Gemstone Common Library on NuGet</a><br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/gemstone/common/blob/master/LICENSE" target="_blank" rel="noopener noreferrer">Copyright © 2020 Grid Protection Alliance</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40gridprotectionalliance.org?Subject=Gemstone%20Common%20Library">GPA Support</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script><script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=Gemstone%20Common%20Library: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script></body></html>